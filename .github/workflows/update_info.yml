name: Update Ticker Info (Daily)

on:
  schedule:
    - cron: "0 22 * * *" # UTC 22:00 (한국 오전 7시)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-all-info:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 코드 가져오기
      - name: Checkout main branch
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정 (추가)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # npm 캐시 사용

      # 3. Node.js 의존성 설치 (추가)
      - name: Install Node.js dependencies
        run: npm ci

      # 4. IPO 날짜 및 Upcoming 상태 업데이트 (추가)
      - name: Sync IPO dates and upcoming status
        run: npm run add-ipo-dates
      
      # 5. 최종 nav.json 생성 (추가)
      - name: Generate final nav.json
        run: npm run generate-nav

      # 6. 파이썬 설정 (기존)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements.txt

      # 7. 파이썬 의존성 설치 (기존)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install yfinance
          fi
      
      # 8. 상세정보 스크레이퍼 실행 (기존)
      - name: Run Ticker Info Scraper
        run: python scripts/scraper_info.py

      # 9. 변경된 파일이 있으면 자동으로 커밋 (수정)
      - name: Commit and push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "⚙️ Auto: Update ticker info, IPO dates, and nav.json"
          # 이제 public/data와 public/nav 폴더의 모든 변경사항을 커밋 대상으로 포함
          file_pattern: "public/data/*.json public/nav/*.json"
          branch: main
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com