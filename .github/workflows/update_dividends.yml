name: Update Dividend Data

on:
  schedule:
    # 한국 시간 기준 (UTC+9)
    # 매일 오전 6시 (UTC 21:00)
    - cron: '0 21 * * *'
    # 매일 오후 11시 30분 (UTC 14:30)
    - cron: '30 14 * * *'
  workflow_dispatch:

permissions:
  # 리포지토리 내용을 수정해야 하므로 write 권한이 필요합니다.
  contents: write

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest
    steps:
      # 1. 'main' 브랜치의 최신 코드를 가져옵니다.
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      # 2. Python 환경을 설정합니다.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: stock/requirements.txt

      # 3. 파이썬 의존성을 설치합니다.
      - name: Install dependencies
        run: pip install -r stock/requirements.txt

      # 4. 스크래핑 스크립트를 실행합니다.
      #    스크립트 내의 상대 경로는 'stock' 폴더 기준이므로, 작업 디렉토리를 지정해줍니다.
      - name: Run Scraper
        working-directory: ./stock
        run: python scripts/scraper_dividend.py

      # 5. 변경된 JSON 파일들을 'main' 브랜치에 커밋하고 푸시합니다.
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): Update dividend data"
          # 작업 디렉토리가 아닌, 리포지토리 루트 기준의 파일 경로를 명시합니다.
          file_pattern: "stock/public/data/*.json"
          # 'main' 브랜치에 푸시하도록 명시합니다.
          branch: main
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com