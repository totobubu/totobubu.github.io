// 🔍 기능별 컴포넌트 구조
// 1. 사용자/가족 계정 관리 컴포넌트
// 이 기능은 사용자가 자신과 가족의 자산을 구분하여 관리할 수 있게 하는 핵심 부분입니다.

// FamilySelector.js: 페이지 상단에 위치하며, 가족 구성원의 아이콘과 이름을 표시합니다. 클릭하면 해당 구성원의 데이터로 대시보드가 변경되도록 합니다. 👨‍👩‍👧‍👦

// AddFamilyMemberModal.js: '가족 추가' 버튼을 클릭했을 때 나타나는 모달 창입니다. 가족 구성원의 이름, 관계 등을 입력받아 데이터를 추가하는 역할을 합니다.

// AccountList.js: 선택된 가족 구성원의 통장, 주식, 코인 계좌 목록을 보여주는 컴포넌트입니다.

// 2. 엑셀 업로드 및 편집 컴포넌트
// 사용자 편의성을 위해 다양한 증권사의 CSV 파일을 쉽게 업로드하고 편집할 수 있는 기능입니다.

// FileUpload.js: 'CSV 업로드' 버튼과 드래그 앤 드롭 영역을 포함합니다. 사용자가 파일을 선택하거나 드롭하면 파일을 읽어오는 역할을 담당합니다.

// MappingEditor.js: 파일 업로드 후 CSV의 항목(컬럼명)을 애플리케이션의 데이터 구조(평가액, 보유량 등)에 맞게 매핑하는 화면입니다. 예를 들어, 사용자가 '보유수량' 컬럼을 '보유량' 데이터 필드와 연결하도록 인터페이스를 제공해야 합니다. 이 과정은 사용자에게 매우 직관적이어야 합니다.

// ImportPreviewTable.js: 매핑이 완료된 후, 실제 데이터가 어떻게 적용될지 미리 보여주는 표입니다. 사용자가 최종 확인 후 '저장' 버튼을 누르면 데이터가 DB에 저장됩니다.

// 3. 상세 자산 관리 표 컴포넌트
// 각 계좌의 상세 자산 목록을 보여주는 테이블 형태의 컴포넌트입니다.

// AssetTable.js: 주식, 코인, 현금 항목을 담는 메인 테이블 컴포넌트입니다.

// TableRow.js: 각 자산 항목(예: 삼성전자 주식)의 상세 정보(보유량, 평단가, 현재시세, 평가액)를 보여주는 행 컴포넌트입니다.

// AssetDetailsModal.js: 특정 자산 항목을 클릭했을 때, 해당 항목의 상세 거래 내역이나 추가 정보를 보여주는 모달 창입니다.

// 4. 총 자산 대시보드 컴포넌트
// 사용자의 전체 자산 현황을 한눈에 볼 수 있도록 시각화하는 대시보드입니다.

// TotalAssetDashboard.js: 총 자산액을 크게 표시하고, 자산 종류별(주식, 코인, 현금) 비중을 보여주는 원형 차트(Pie Chart)를 포함합니다. 📈

// AssetValueChart.js: 기간별 총 자산 변화를 보여주는 꺾은선 그래프(Line Chart)를 포함합니다. 이는 사용자의 투자 성과를 시각적으로 보여주는 데 매우 효과적입니다.

// FamilyDashboard.js: FamilySelector에서 선택된 가족 구성원의 데이터에 따라 TotalAssetDashboard와 AssetValueChart의 데이터가 동적으로 변경되도록 설계합니다.

// 이러한 구조를 바탕으로 개발을 진행하시면, 기능적으로 안정적이고 사용자 친화적인 '나의 자산' 페이지를 구축하실 수 있을 거예요. 궁금한 점이 있으시면 언제든지 다시 질문해 주세요!
